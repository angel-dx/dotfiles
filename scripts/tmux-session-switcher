#!/bin/bash

echo "╭─ Tmux Session Manager ─╮"
echo "│ Current sessions:       │"
echo "╰─────────────────────────╯"
echo

# Get current session
current_session=$(tmux display-message -p '#S' 2>/dev/null || echo "none")

# List sessions with details
sessions=$(tmux list-sessions -F "#{session_name}:#{session_windows}:#{session_created}:#{session_attached}" 2>/dev/null)

if [[ -z "$sessions" ]]; then
    echo "No tmux sessions found."
    read -p "Press Enter to exit..."
    exit 0
fi

counter=1
declare -A session_names
echo "Sessions:"
echo "─────────"

while IFS=: read -r name windows created attached; do
    if [[ "$name" == "$current_session" ]]; then
        marker="→"
        color="\033[32m"
    else
        marker=" "
        color="\033[0m"
    fi

    # Format created time
    created_fmt=$(date -d "@$created" "+%m/%d %H:%M" 2>/dev/null || echo "unknown")
    attached_status=$([[ "$attached" == "1" ]] && echo "attached" || echo "detached")

    printf "${color}%s %2d. %-15s %2s windows %-12s %s\033[0m\n" \
           "$marker" $counter "$name" "$windows" "$created_fmt" "$attached_status"

    session_names[$counter]="$name"
    ((counter++))
done <<< "$sessions"

echo
echo "Actions:"
echo "n. New session"
echo "k. Kill session"
echo "r. Rename session"
echo "q. Quit"
echo

read -p "Choice: " choice

case $choice in
    [0-9]*)
        if [[ -n "${session_names[$choice]}" ]]; then
            session_name="${session_names[$choice]}"
            if [[ "$session_name" != "$current_session" ]]; then
                tmux switch-client -t "$session_name"
            else
                echo "Already in session '$session_name'"
                sleep 1
            fi
        fi
        ;;
    n|N)
        read -p "Enter new session name: " new_name
        if [[ -n "$new_name" ]]; then
            read -p "Start in directory (default: ~): " start_dir
            start_dir="${start_dir:-$HOME}"
            tmux new-session -d -s "$new_name" -c "$start_dir"
            tmux switch-client -t "$new_name"
        fi
        ;;
    k|K)
        read -p "Enter session number to kill: " kill_choice
        if [[ -n "${session_names[$kill_choice]}" ]]; then
            session_to_kill="${session_names[$kill_choice]}"
            if [[ "$session_to_kill" == "$current_session" ]]; then
                echo "Cannot kill current session. Switch to another session first."
                sleep 2
            else
                read -p "Kill session '$session_to_kill'? (y/N): " confirm
                if [[ "$confirm" =~ ^[Yy] ]]; then
                    tmux kill-session -t "$session_to_kill"
                    echo "Session '$session_to_kill' killed."
                    sleep 1
                fi
            fi
        fi
        ;;
    r|R)
        read -p "Enter session number to rename: " rename_choice
        if [[ -n "${session_names[$rename_choice]}" ]]; then
            old_name="${session_names[$rename_choice]}"
            read -p "Enter new name for '$old_name': " new_name
            if [[ -n "$new_name" ]]; then
                tmux rename-session -t "$old_name" "$new_name"
                echo "Session renamed to '$new_name'"
                sleep 1
            fi
        fi
        ;;
esac
